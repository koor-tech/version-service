/*
   Copyright 2023 Koor Technologies, Inc. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
syntax = "proto3";

package api.v1;

import "validate/validate.proto";

option go_package = "github.com/koor-tech/version-service/api/v1;apiv1";

service VersionService {
  rpc Operator(OperatorRequest) returns (OperatorResponse) {}
}

// SimpleVersions describes a map of products with version strings
message SimpleVersions {
  string kube = 1 [(validate.rules).string.pattern = "^v?\\d+(?:\\.\\d+){0,2}(?:\\-\\d+)?$"];
  string koor_operator = 2 [(validate.rules).string.pattern = "^v?\\d+(?:\\.\\d+){0,2}(?:\\-\\d+)?$"];
  string ksd = 3 [(validate.rules).string.pattern = "^v?\\d+(?:\\.\\d+){0,2}(?:\\-\\d+)?$"];
  string ceph = 4 [(validate.rules).string.pattern = "^v?\\d+(?:\\.\\d+){0,2}(?:\\-\\d+)?$"];
}

message OperatorRequest {
  SimpleVersions versions = 1;
}

// ImageVersion defines a version of a product with a container image
message ImageVersion {
  string version = 1 [(validate.rules).string.pattern = "^v?\\d+(?:\\.\\d+){0,2}(?:\\-\\d+)?$"];
  string image = 2 [(validate.rules).string.uri = true];
  string hash = 3;
}

// HelmVersion defines a version of a product with a helm chart version
message HelmVersion {
  string version = 1 [(validate.rules).string.pattern = "^v?\\d+(?:\\.\\d+){0,2}(?:\\-\\d+)?$"];
  string repository = 2 [(validate.rules).string.uri = true];
  string chart = 3;
  string image = 4 [(validate.rules).string.uri = true];
  string hash = 5;
}

// DetailedVersions describes a map of products with images or helm chart versions
message DetailedVersions {
  HelmVersion koor_operator = 1;
  HelmVersion ksd = 2;
  ImageVersion ceph = 3;
}

message OperatorResponse {
  DetailedVersions versions = 1;
}

// VersionMatrix describes a map of products with all possible images or helm chart versions
message VersionMatrix {
  map<string, HelmVersion> koor_operator = 1;
  map<string, HelmVersion> ksd = 2;
  map<string, ImageVersion> ceph = 3;
}
